{"remainingRequest":"C:\\Users\\balugoma_Sd2023\\Desktop\\bhmanagementFrontEnd\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\balugoma_Sd2023\\Desktop\\bhmanagementFrontEnd\\node_modules\\vuetify\\lib\\components\\VCombobox\\VCombobox.js","dependencies":[{"path":"C:\\Users\\balugoma_Sd2023\\Desktop\\bhmanagementFrontEnd\\node_modules\\vuetify\\lib\\components\\VCombobox\\VCombobox.js","mtime":1575006194506},{"path":"C:\\Users\\balugoma_Sd2023\\Desktop\\bhmanagementFrontEnd\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1575005889574},{"path":"C:\\Users\\balugoma_Sd2023\\Desktop\\bhmanagementFrontEnd\\node_modules\\babel-loader\\lib\\index.js","mtime":1575005885262}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/balugoma_Sd2023/Desktop/bhmanagementFrontEnd/node_modules/vuetify/lib/components/VCombobox/VCombobox.js"],"names":["VSelect","VAutocomplete","keyCodes","extend","name","props","delimiters","type","Array","default","returnObject","Boolean","data","editingIndex","computed","counterValue","multiple","selectedItems","length","internalSearch","toString","hasSlot","options","call","isAnyValueAllowed","menuCanShow","isFocused","hasDisplayedItems","$slots","hideNoData","methods","onInternalSearchChanged","val","delimiter","find","d","endsWith","slice","updateTags","updateMenuDimensions","genInput","input","on","paste","onPaste","genChipSelection","item","index","chip","componentOptions","listeners","dblclick","getText","selectedIndex","onChipInput","onEnterDown","e","preventDefault","$nextTick","getMenuIndex","updateSelf","onFilteredItemsChanged","oldVal","autoSelectFirst","onKeyDown","keyCode","left","$refs","selectionStart","enter","changeSelectedIndex","onTabDown","stopPropagation","selectItem","updateEditing","setSelectedItems","internalValue","setValue","value","updateCombobox","isUsingSlot","$scopedSlots","selection","hasChips","searchIsDirty","undefined","menuIndex","indexOf","splice","event","pastedItemText","clipboardData","getData","findExistingIndex"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA,kE,CAAmE;;AAEnE,OAAOA,OAAP;AACA,OAAOC,aAAP,uC,CAA4D;;AAE5D,SAASC,QAAT;AACA;;AAEA,eAAeD,aAAa,CAACE,MAAd,CAAqB;AAClCC,EAAAA,IAAI,EAAE,YAD4B;AAElCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,UAAU,EAAE;AACVC,MAAAA,IAAI,EAAEC,KADI;AAEVC,MAAAA,OAAO,EAAE;AAAA,eAAM,EAAN;AAAA;AAFC,KADP;AAKLC,IAAAA,YAAY,EAAE;AACZH,MAAAA,IAAI,EAAEI,OADM;AAEZF,MAAAA,OAAO,EAAE;AAFG;AALT,GAF2B;AAYlCG,EAAAA,IAAI,EAAE;AAAA,WAAO;AACXC,MAAAA,YAAY,EAAE,CAAC;AADJ,KAAP;AAAA,GAZ4B;AAelCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,YADQ,0BACO;AACb,aAAO,KAAKC,QAAL,GAAgB,KAAKC,aAAL,CAAmBC,MAAnC,GAA4C,CAAC,KAAKC,cAAL,IAAuB,EAAxB,EAA4BC,QAA5B,GAAuCF,MAA1F;AACD,KAHO;AAKRG,IAAAA,OALQ,qBAKE;AACR,aAAOrB,OAAO,CAACsB,OAAR,CAAgBR,QAAhB,CAAyBO,OAAzB,CAAiCE,IAAjC,CAAsC,IAAtC,KAA+C,KAAKP,QAA3D;AACD,KAPO;AASRQ,IAAAA,iBATQ,+BASY;AAClB,aAAO,IAAP;AACD,KAXO;AAaRC,IAAAA,WAbQ,yBAaM;AACZ,UAAI,CAAC,KAAKC,SAAV,EAAqB,OAAO,KAAP;AACrB,aAAO,KAAKC,iBAAL,IAA0B,CAAC,CAAC,KAAKC,MAAL,CAAY,SAAZ,CAAF,IAA4B,CAAC,KAAKC,UAAnE;AACD;AAhBO,GAfwB;AAkClCC,EAAAA,OAAO,EAAE;AACPC,IAAAA,uBADO,mCACiBC,GADjB,EACsB;AAC3B,UAAIA,GAAG,IAAI,KAAKhB,QAAZ,IAAwB,KAAKV,UAAL,CAAgBY,MAA5C,EAAoD;AAClD,YAAMe,SAAS,GAAG,KAAK3B,UAAL,CAAgB4B,IAAhB,CAAqB,UAAAC,CAAC;AAAA,iBAAIH,GAAG,CAACI,QAAJ,CAAaD,CAAb,CAAJ;AAAA,SAAtB,CAAlB;;AAEA,YAAIF,SAAS,IAAI,IAAjB,EAAuB;AACrB,eAAKd,cAAL,GAAsBa,GAAG,CAACK,KAAJ,CAAU,CAAV,EAAaL,GAAG,CAACd,MAAJ,GAAae,SAAS,CAACf,MAApC,CAAtB;AACA,eAAKoB,UAAL;AACD;AACF;;AAED,WAAKC,oBAAL;AACD,KAZM;AAcPC,IAAAA,QAdO,sBAcI;AACT,UAAMC,KAAK,GAAGxC,aAAa,CAACqB,OAAd,CAAsBQ,OAAtB,CAA8BU,QAA9B,CAAuCjB,IAAvC,CAA4C,IAA5C,CAAd;AACAkB,MAAAA,KAAK,CAAC7B,IAAN,CAAW8B,EAAX,CAAcC,KAAd,GAAsB,KAAKC,OAA3B;AACA,aAAOH,KAAP;AACD,KAlBM;AAoBPI,IAAAA,gBApBO,4BAoBUC,IApBV,EAoBgBC,KApBhB,EAoBuB;AAAA;;AAC5B,UAAMC,IAAI,GAAGhD,OAAO,CAACsB,OAAR,CAAgBQ,OAAhB,CAAwBe,gBAAxB,CAAyCtB,IAAzC,CAA8C,IAA9C,EAAoDuB,IAApD,EAA0DC,KAA1D,CAAb,CAD4B,CACmD;;AAE/E,UAAI,KAAK/B,QAAT,EAAmB;AACjBgC,QAAAA,IAAI,CAACC,gBAAL,CAAsBC,SAAtB,qBAAuCF,IAAI,CAACC,gBAAL,CAAsBC,SAA7D;AACEC,UAAAA,QAAQ,EAAE,oBAAM;AACd,YAAA,KAAI,CAACtC,YAAL,GAAoBkC,KAApB;AACA,YAAA,KAAI,CAAC5B,cAAL,GAAsB,KAAI,CAACiC,OAAL,CAAaN,IAAb,CAAtB;AACA,YAAA,KAAI,CAACO,aAAL,GAAqB,CAAC,CAAtB;AACD;AALH;AAOD;;AAED,aAAOL,IAAP;AACD,KAlCM;AAoCPM,IAAAA,WApCO,uBAoCKR,IApCL,EAoCW;AAChB9C,MAAAA,OAAO,CAACsB,OAAR,CAAgBQ,OAAhB,CAAwBwB,WAAxB,CAAoC/B,IAApC,CAAyC,IAAzC,EAA+CuB,IAA/C;AACA,WAAKjC,YAAL,GAAoB,CAAC,CAArB;AACD,KAvCM;AAyCP;AACA;AACA0C,IAAAA,WA3CO,uBA2CKC,CA3CL,EA2CQ;AAAA;;AACbA,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKC,SAAL,CAAe,YAAM;AACnB;AACA,YAAI,MAAI,CAACC,YAAL,KAAsB,CAAC,CAA3B,EAA8B;;AAC9B,QAAA,MAAI,CAACC,UAAL;AACD,OAJD;AAKD,KAlDM;AAoDPC,IAAAA,sBApDO,kCAoDgB7B,GApDhB,EAoDqB8B,MApDrB,EAoD6B;AAClC,UAAI,CAAC,KAAKC,eAAV,EAA2B;AAC3B9D,MAAAA,aAAa,CAACqB,OAAd,CAAsBQ,OAAtB,CAA8B+B,sBAA9B,CAAqDtC,IAArD,CAA0D,IAA1D,EAAgES,GAAhE,EAAqE8B,MAArE;AACD,KAvDM;AAyDPE,IAAAA,SAzDO,qBAyDGR,CAzDH,EAyDM;AACX,UAAMS,OAAO,GAAGT,CAAC,CAACS,OAAlB;AACAjE,MAAAA,OAAO,CAACsB,OAAR,CAAgBQ,OAAhB,CAAwBkC,SAAxB,CAAkCzC,IAAlC,CAAuC,IAAvC,EAA6CiC,CAA7C,EAFW,CAEsC;AACjD;;AAEA,UAAI,KAAKxC,QAAL,IAAiBiD,OAAO,KAAK/D,QAAQ,CAACgE,IAAtC,IAA8C,KAAKC,KAAL,CAAW1B,KAAX,CAAiB2B,cAAjB,KAAoC,CAAtF,EAAyF;AACvF,aAAKR,UAAL;AACD,OAFD,MAEO,IAAIK,OAAO,KAAK/D,QAAQ,CAACmE,KAAzB,EAAgC;AACrC,aAAKd,WAAL,CAAiBC,CAAjB;AACD,OATU,CAST;AACF;AACA;AACA;;;AAGA,WAAKc,mBAAL,CAAyBL,OAAzB;AACD,KAzEM;AA2EPM,IAAAA,SA3EO,qBA2EGf,CA3EH,EA2EM;AACX;AACA;AACA;AACA,UAAI,KAAKxC,QAAL,IAAiB,KAAKG,cAAtB,IAAwC,KAAKwC,YAAL,OAAwB,CAAC,CAArE,EAAwE;AACtEH,QAAAA,CAAC,CAACC,cAAF;AACAD,QAAAA,CAAC,CAACgB,eAAF;AACA,eAAO,KAAKlC,UAAL,EAAP;AACD;;AAEDrC,MAAAA,aAAa,CAACqB,OAAd,CAAsBQ,OAAtB,CAA8ByC,SAA9B,CAAwChD,IAAxC,CAA6C,IAA7C,EAAmDiC,CAAnD;AACD,KAtFM;AAwFPiB,IAAAA,UAxFO,sBAwFI3B,IAxFJ,EAwFU;AACf;AACA,UAAI,KAAKjC,YAAL,GAAoB,CAAC,CAAzB,EAA4B;AAC1B,aAAK6D,aAAL;AACD,OAFD,MAEO;AACLzE,QAAAA,aAAa,CAACqB,OAAd,CAAsBQ,OAAtB,CAA8B2C,UAA9B,CAAyClD,IAAzC,CAA8C,IAA9C,EAAoDuB,IAApD;AACD;AACF,KA/FM;AAiGP6B,IAAAA,gBAjGO,8BAiGY;AACjB,UAAI,KAAKC,aAAL,IAAsB,IAAtB,IAA8B,KAAKA,aAAL,KAAuB,EAAzD,EAA6D;AAC3D,aAAK3D,aAAL,GAAqB,EAArB;AACD,OAFD,MAEO;AACL,aAAKA,aAAL,GAAqB,KAAKD,QAAL,GAAgB,KAAK4D,aAArB,GAAqC,CAAC,KAAKA,aAAN,CAA1D;AACD;AACF,KAvGM;AAyGPC,IAAAA,QAzGO,oBAyGEC,KAzGF,EAyGS;AACd9E,MAAAA,OAAO,CAACsB,OAAR,CAAgBQ,OAAhB,CAAwB+C,QAAxB,CAAiCtD,IAAjC,CAAsC,IAAtC,EAA4CuD,KAAK,IAAI,IAAT,GAAgBA,KAAhB,GAAwB,KAAK3D,cAAzE;AACD,KA3GM;AA6GPuD,IAAAA,aA7GO,2BA6GS;AACd,UAAMI,KAAK,GAAG,KAAKF,aAAL,CAAmBvC,KAAnB,EAAd;AACAyC,MAAAA,KAAK,CAAC,KAAKjE,YAAN,CAAL,GAA2B,KAAKM,cAAhC;AACA,WAAK0D,QAAL,CAAcC,KAAd;AACA,WAAKjE,YAAL,GAAoB,CAAC,CAArB;AACD,KAlHM;AAoHPkE,IAAAA,cApHO,4BAoHU;AACf,UAAMC,WAAW,GAAGrE,OAAO,CAAC,KAAKsE,YAAL,CAAkBC,SAAnB,CAAP,IAAwC,KAAKC,QAAjE,CADe,CAC4D;AAC3E;;AAEA,UAAIH,WAAW,IAAI,CAAC,KAAKI,aAAzB,EAAwC,OAJzB,CAIiC;AAChD;;AAEA,UAAI,KAAKjE,cAAL,KAAwB,KAAKiC,OAAL,CAAa,KAAKwB,aAAlB,CAA5B,EAA8D,KAAKC,QAAL,GAP/C,CAOgE;AAC/E;;AAEA,UAAIG,WAAJ,EAAiB,KAAK7D,cAAL,GAAsBkE,SAAtB;AAClB,KA/HM;AAiIPzB,IAAAA,UAjIO,wBAiIM;AACX,WAAK5C,QAAL,GAAgB,KAAKsB,UAAL,EAAhB,GAAoC,KAAKyC,cAAL,EAApC;AACD,KAnIM;AAqIPzC,IAAAA,UArIO,wBAqIM;AACX,UAAMgD,SAAS,GAAG,KAAK3B,YAAL,EAAlB,CADW,CAC4B;AACvC;AACA;;AAEA,UAAI2B,SAAS,GAAG,CAAZ,IAAiB,CAAC,KAAKF,aAA3B,EAA0C;;AAE1C,UAAI,KAAKvE,YAAL,GAAoB,CAAC,CAAzB,EAA4B;AAC1B,eAAO,KAAK6D,aAAL,EAAP;AACD;;AAED,UAAM3B,KAAK,GAAG,KAAK9B,aAAL,CAAmBsE,OAAnB,CAA2B,KAAKpE,cAAhC,CAAd,CAXW,CAWoD;AAC/D;AACA;;AAEA,UAAI4B,KAAK,GAAG,CAAC,CAAb,EAAgB;AACd,YAAM6B,aAAa,GAAG,KAAKA,aAAL,CAAmBvC,KAAnB,EAAtB;AACAuC,QAAAA,aAAa,CAACY,MAAd,CAAqBzC,KAArB,EAA4B,CAA5B;AACA,aAAK8B,QAAL,CAAcD,aAAd;AACD,OAnBU,CAmBT;AACF;AACA;;;AAGA,UAAIU,SAAS,GAAG,CAAC,CAAjB,EAAoB,OAAO,KAAKnE,cAAL,GAAsB,IAA7B;AACpB,WAAKsD,UAAL,CAAgB,KAAKtD,cAArB;AACA,WAAKA,cAAL,GAAsB,IAAtB;AACD,KAhKM;AAkKPyB,IAAAA,OAlKO,mBAkKC6C,KAlKD,EAkKQ;AACb,UAAI,CAAC,KAAKzE,QAAN,IAAkB,KAAKoE,aAA3B,EAA0C;AAC1C,UAAMM,cAAc,GAAGD,KAAK,CAACE,aAAN,CAAoBC,OAApB,CAA4B,0CAA5B,CAAvB;;AAEA,UAAIF,cAAc,IAAI,KAAKG,iBAAL,CAAuBH,cAAvB,MAA2C,CAAC,CAAlE,EAAqE;AACnED,QAAAA,KAAK,CAAChC,cAAN;AACAzD,QAAAA,OAAO,CAACsB,OAAR,CAAgBQ,OAAhB,CAAwB2C,UAAxB,CAAmClD,IAAnC,CAAwC,IAAxC,EAA8CmE,cAA9C;AACD;AACF;AA1KM;AAlCyB,CAArB,CAAf","sourcesContent":["// Styles\r\nimport \"../../../src/components/VAutocomplete/VAutocomplete.sass\"; // Extensions\r\n\r\nimport VSelect from '../VSelect/VSelect';\r\nimport VAutocomplete from '../VAutocomplete/VAutocomplete'; // Utils\r\n\r\nimport { keyCodes } from '../../util/helpers';\r\n/* @vue/component */\r\n\r\nexport default VAutocomplete.extend({\r\n  name: 'v-combobox',\r\n  props: {\r\n    delimiters: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    returnObject: {\r\n      type: Boolean,\r\n      default: true\r\n    }\r\n  },\r\n  data: () => ({\r\n    editingIndex: -1\r\n  }),\r\n  computed: {\r\n    counterValue() {\r\n      return this.multiple ? this.selectedItems.length : (this.internalSearch || '').toString().length;\r\n    },\r\n\r\n    hasSlot() {\r\n      return VSelect.options.computed.hasSlot.call(this) || this.multiple;\r\n    },\r\n\r\n    isAnyValueAllowed() {\r\n      return true;\r\n    },\r\n\r\n    menuCanShow() {\r\n      if (!this.isFocused) return false;\r\n      return this.hasDisplayedItems || !!this.$slots['no-data'] && !this.hideNoData;\r\n    }\r\n\r\n  },\r\n  methods: {\r\n    onInternalSearchChanged(val) {\r\n      if (val && this.multiple && this.delimiters.length) {\r\n        const delimiter = this.delimiters.find(d => val.endsWith(d));\r\n\r\n        if (delimiter != null) {\r\n          this.internalSearch = val.slice(0, val.length - delimiter.length);\r\n          this.updateTags();\r\n        }\r\n      }\r\n\r\n      this.updateMenuDimensions();\r\n    },\r\n\r\n    genInput() {\r\n      const input = VAutocomplete.options.methods.genInput.call(this);\r\n      input.data.on.paste = this.onPaste;\r\n      return input;\r\n    },\r\n\r\n    genChipSelection(item, index) {\r\n      const chip = VSelect.options.methods.genChipSelection.call(this, item, index); // Allow user to update an existing value\r\n\r\n      if (this.multiple) {\r\n        chip.componentOptions.listeners = { ...chip.componentOptions.listeners,\r\n          dblclick: () => {\r\n            this.editingIndex = index;\r\n            this.internalSearch = this.getText(item);\r\n            this.selectedIndex = -1;\r\n          }\r\n        };\r\n      }\r\n\r\n      return chip;\r\n    },\r\n\r\n    onChipInput(item) {\r\n      VSelect.options.methods.onChipInput.call(this, item);\r\n      this.editingIndex = -1;\r\n    },\r\n\r\n    // Requires a manual definition\r\n    // to overwrite removal in v-autocomplete\r\n    onEnterDown(e) {\r\n      e.preventDefault();\r\n      this.$nextTick(() => {\r\n        // If has menu index, let v-select-list handle\r\n        if (this.getMenuIndex() > -1) return;\r\n        this.updateSelf();\r\n      });\r\n    },\r\n\r\n    onFilteredItemsChanged(val, oldVal) {\r\n      if (!this.autoSelectFirst) return;\r\n      VAutocomplete.options.methods.onFilteredItemsChanged.call(this, val, oldVal);\r\n    },\r\n\r\n    onKeyDown(e) {\r\n      const keyCode = e.keyCode;\r\n      VSelect.options.methods.onKeyDown.call(this, e); // If user is at selection index of 0\r\n      // create a new tag\r\n\r\n      if (this.multiple && keyCode === keyCodes.left && this.$refs.input.selectionStart === 0) {\r\n        this.updateSelf();\r\n      } else if (keyCode === keyCodes.enter) {\r\n        this.onEnterDown(e);\r\n      } // The ordering is important here\r\n      // allows new value to be updated\r\n      // and then moves the index to the\r\n      // proper location\r\n\r\n\r\n      this.changeSelectedIndex(keyCode);\r\n    },\r\n\r\n    onTabDown(e) {\r\n      // When adding tags, if searching and\r\n      // there is not a filtered options,\r\n      // add the value to the tags list\r\n      if (this.multiple && this.internalSearch && this.getMenuIndex() === -1) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        return this.updateTags();\r\n      }\r\n\r\n      VAutocomplete.options.methods.onTabDown.call(this, e);\r\n    },\r\n\r\n    selectItem(item) {\r\n      // Currently only supports items:<string[]>\r\n      if (this.editingIndex > -1) {\r\n        this.updateEditing();\r\n      } else {\r\n        VAutocomplete.options.methods.selectItem.call(this, item);\r\n      }\r\n    },\r\n\r\n    setSelectedItems() {\r\n      if (this.internalValue == null || this.internalValue === '') {\r\n        this.selectedItems = [];\r\n      } else {\r\n        this.selectedItems = this.multiple ? this.internalValue : [this.internalValue];\r\n      }\r\n    },\r\n\r\n    setValue(value) {\r\n      VSelect.options.methods.setValue.call(this, value != null ? value : this.internalSearch);\r\n    },\r\n\r\n    updateEditing() {\r\n      const value = this.internalValue.slice();\r\n      value[this.editingIndex] = this.internalSearch;\r\n      this.setValue(value);\r\n      this.editingIndex = -1;\r\n    },\r\n\r\n    updateCombobox() {\r\n      const isUsingSlot = Boolean(this.$scopedSlots.selection) || this.hasChips; // If search is not dirty and is\r\n      // using slot, do nothing\r\n\r\n      if (isUsingSlot && !this.searchIsDirty) return; // The internal search is not matching\r\n      // the internal value, update the input\r\n\r\n      if (this.internalSearch !== this.getText(this.internalValue)) this.setValue(); // Reset search if using slot\r\n      // to avoid a double input\r\n\r\n      if (isUsingSlot) this.internalSearch = undefined;\r\n    },\r\n\r\n    updateSelf() {\r\n      this.multiple ? this.updateTags() : this.updateCombobox();\r\n    },\r\n\r\n    updateTags() {\r\n      const menuIndex = this.getMenuIndex(); // If the user is not searching\r\n      // and no menu item is selected\r\n      // do nothing\r\n\r\n      if (menuIndex < 0 && !this.searchIsDirty) return;\r\n\r\n      if (this.editingIndex > -1) {\r\n        return this.updateEditing();\r\n      }\r\n\r\n      const index = this.selectedItems.indexOf(this.internalSearch); // If it already exists, do nothing\r\n      // this might need to change to bring\r\n      // the duplicated item to the last entered\r\n\r\n      if (index > -1) {\r\n        const internalValue = this.internalValue.slice();\r\n        internalValue.splice(index, 1);\r\n        this.setValue(internalValue);\r\n      } // If menu index is greater than 1\r\n      // the selection is handled elsewhere\r\n      // TODO: find out where\r\n\r\n\r\n      if (menuIndex > -1) return this.internalSearch = null;\r\n      this.selectItem(this.internalSearch);\r\n      this.internalSearch = null;\r\n    },\r\n\r\n    onPaste(event) {\r\n      if (!this.multiple || this.searchIsDirty) return;\r\n      const pastedItemText = event.clipboardData.getData('text/vnd.vuetify.autocomplete.item+plain');\r\n\r\n      if (pastedItemText && this.findExistingIndex(pastedItemText) === -1) {\r\n        event.preventDefault();\r\n        VSelect.options.methods.selectItem.call(this, pastedItemText);\r\n      }\r\n    }\r\n\r\n  }\r\n});\r\n//# sourceMappingURL=VCombobox.js.map"]}]}